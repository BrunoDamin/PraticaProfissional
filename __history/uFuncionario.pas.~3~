unit uFuncionario;


interface
    uses uPai;

    type Funcionarios = class(Pai)
      private
      protected
        Nome : string[55];
        tipo : string[55];
        salario : real;
      public
        constructor CrieObj;
        constructor CrieInit( pCodigo : integer; pNome, pTipo: string; pSalario : real; pDataCad, pUltAlt: string);
        destructor Destrua_se;
        procedure setPais(pPais : string);
        procedure setSigla(pSigla : string);
        procedure setDDI(pDDI : string);
        procedure setMoeda(pMoeda : string);
        function getPais : string;
        function getSigla : string;
        function getDDI : string;
        function getMoeda : string;
        function clone : Funcionarios;
    end;

implementation

{ Funcionarios }

function Funcionarios.clone: Funcionarios;
begin
     result := Funcionarios.CrieInit(codigo, nome, tipo, salario, dataCad, ultAlt );
end;

constructor Funcionarios.CrieInit(pCodigo : integer; pNome, pTipo: string; pSalario : real; pDataCad, pUltAlt: string);
begin
    codigo := pCodigo;
    nome := pNome;
    tipo := pTipo;
    salario := pSalario;
    DataCad := pDataCad;
    UltALt := pUltAlt;

end;

constructor Funcionarios.CrieObj;
begin
    codigo := 0;
    Pais := '';
    Sigla := '';
    DDI := '';
    moeda := '';
    DataCad := '';
    UltAlt := '';

end;

destructor Funcionarios.Destrua_se;
begin

end;

function Funcionarios.getDDI: string;
begin
    result := DDI;
end;

function Funcionarios.getMoeda: string;
begin
    result := moeda;
end;

function Funcionarios.getPais: string;
begin
    result := Pais;
end;

function Funcionarios.getSigla: string;
begin
    result := Sigla;
end;

procedure Funcionarios.setDDI(pDDI: string);
begin
   DDI := pDDI;
end;

procedure Funcionarios.setMoeda(pMoeda: string);
begin
   moeda := pMoeda;
end;

procedure Funcionarios.setPais(pPais: string);
begin
   Pais := pPais;
end;

procedure Funcionarios.setSigla(pSigla: string);
begin
   Sigla := pSigla;
end;

end.

