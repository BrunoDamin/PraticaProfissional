unit uMercadorias;

interface
  uses uPai, uFornecedores;

  type Mercadorias = Class(Pai)
    private
    protected
      mercadoria : string[55];
      quantidade : integer;
      tipo : string[55];
      umFornecedor : Fornecedores;
    public
        constructor CrieObj;
        constructor CrieInit( pCodigo : integer; pMercadoria : string; pQuantidade : integer; pTipo : string; pCodFornecedor : integer; pDataCad, pUltAlt: string);
        destructor Destrua_se;
        procedure setMercadoria(pMercadoria : string);
        procedure setQuantidade(pQuantidade : integer);
        procedure setTipo(pTipo : string);
        procedure setFornecedor(pFornecedor : Fornecedores);
        function getMercadoria : string;
        function getQuantidade : integer;
        function getTipo : string;
        function getFornecedor : Fornecedores;
        function clone : Mercadorias;
  End;

implementation

{ Mercadorias }

function Mercadorias.clone: Mercadorias;
begin
   result := Mercadorias.CrieInit(codigo, mercadoria, quantidade, tipo, umFornecedor.getCodigo, dataCad, ultAlt );
end;

constructor Mercadorias.CrieInit(pCodigo: integer; pMercadoria: string;
  pQuantidade: integer; pTipo: string; pCodFornecedor: integer; pDataCad,
  pUltAlt: string);
begin
    codigo := pCodigo;
    mercadoria := pMercadoria;
    quantidade := pQuantidade;
    tipo := pTipo;
    umFornecedor := Fornecedores.CrieInit(pCodFornecedor, '', '', '', '', '','');
    DataCad := pDataCad;
    UltALt := pUltAlt;
end;

constructor Mercadorias.CrieObj;
begin
    codigo := 0;
    mercadoria := '';
    quantidade := 0;
    tipo := '';
    umFornecedor := Fornecedores.CrieObj;
    DataCad := '';
    UltALt := '';
end;

destructor Mercadorias.Destrua_se;
begin
   umFornecedor.Destrua_se;
end;

function Mercadorias.getFornecedor: Fornecedores;
begin
   result := umFornecedor;
end;

function Mercadorias.getMercadoria: string;
begin
   result := mercadoria;
end;

function Mercadorias.getQuantidade: integer;
begin
  result := quantidade;
end;

function Mercadorias.getTipo: string;
begin
  result := tipo;
end;

procedure Mercadorias.setFornecedor(pFornecedor: Fornecedores);
begin
  umFornecedor := pFornecedor;
end;

procedure Mercadorias.setMercadoria(pMercadoria: string);
begin
  mercadoria := pMercadoria;
end;

procedure Mercadorias.setQuantidade(pQuantidade: integer);
begin
  quantidade := pQuantidade;
end;

procedure Mercadorias.setTipo(pTipo: string);
begin
  tipo := pTipo;
end;

end.
